#!/usr/bin/env bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1

sub_help() {
    echo "Usage: $BIN_NAME <command>"
    echo
    echo "Commands:"
    echo "   edit                 Open dotfiles in IDE ($DOTFILES_IDE)"
    echo "   help                 This help message"
    echo "   mac-dock-personal    Apply personal macOS Dock settings"
    echo "   mac-dock-work        Apply work macOS Dock settings"
    echo "   mac-defaults         Apply macOS system defaults"
    echo "   mac-apps             Install macOS applications"
    echo "   test                 Run tests"
    echo "   update               Update packages and pkg managers (e.g. OS, brew, apt)"
    echo "   update-repos         Update repos in ~/.repositories"
    echo "   clean                Clean up caches (e.g. brew, apt)"
}

sub_edit() {
    sh -c "cd $DOTFILES_DIR && $DOTFILES_IDE"
}

sub_test() {
    bats "$DOTFILES_DIR"/test/*.bats
}

sub_update() {
    if is-macos; then
        mas upgrade
        brew update
        brew upgrade --greedy
    fi
    if is-debian; then
        sudo apt update
        sudo apt upgrade -y
        sudo snap refresh
    fi
    sub_update-repos
    sub_clean
}

sub_update-repos() {
    for REPO_DIR in "$HOME"/.repositories/*; do
        echo Updating repository: "$(basename "$REPO_DIR")"
        git --work-tree="$REPO_DIR" --git-dir="$REPO_DIR/.git" pull
    done
}

sub_clean() {
    if is-macos; then
        brew cleanup
        brew autoremove
    fi
    if is-debian; then
        sudo apt clean
        sudo apt autoremove
    fi
}

sub_mac-defaults() {
    for DEFAULTS_FILE in "${DOTFILES_DIR}"/macos/defaults*.sh; do
        # shellcheck source=SCRIPTDIR/../macos/defaults.sh
        echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
    done
    echo "Done. Some changes may require a logout/restart to take effect."
}

sub_mac-apps() {
    . "${DOTFILES_DIR}/macos/apps.sh"
}

sub_mac-dock-personal() {
    . "${DOTFILES_DIR}/macos/dock-personal.sh" && echo "Dock reloaded."
}

sub_mac-dock-work() {
    . "${DOTFILES_DIR}/macos/dock-work.sh" && echo "Dock reloaded."
}

# Make sure to keep this in sync with the available public commands

sub_completion() {
    echo "clean dock edit help macos test update"
}

case $COMMAND_NAME in
"" | "-h" | "--help")
    sub_help
    ;;
*)
    shift
    "sub_${COMMAND_NAME}" "$@"
    if [ $? = 127 ]; then
        echo "'$COMMAND_NAME' is not a known command or has errors." >&2
        sub_help
        exit 1
    fi
    ;;
esac
