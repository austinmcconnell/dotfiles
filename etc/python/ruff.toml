# Ruff configuration file
# Based on existing pylint configuration for consistency

# Same as Black and your pylint config
line-length = 100

# Assume Python 3.10+ (matching your default Python version)
target-version = "py310"

# Enable auto-fixing for compatible rules
fix = true

# Exclude common directories (matches your flake8 config)
exclude = [
    ".git",
    "*migrations*",
    ".venv",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[lint]
# Enable rule categories that match your pylint configuration
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # Pylint
    "TRY",  # tryceratops
    "RUF",  # Ruff-specific rules
]

# Disable specific rules that might be too strict or conflict with your style
ignore = [
    "E501",   # Line too long (handled by line-length setting)
    "S101",   # Use of assert (common in tests)
    "S603",   # subprocess call with shell=True
    "S607",   # Starting a process with a partial executable path
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "TRY003",  # Avoid specifying long messages outside the exception class
    "ISC001",  # Conflicts with formatter
    "Q000",    # Double quotes found but single quotes preferred (conflicts with formatter)
    "Q003",    # Change outer quotes to avoid escaping inner quotes (conflicts with formatter)

    # Overly aggressive rules to disable
    "ARG002",  # Unused method argument (too aggressive for methods/callbacks)
    "T201",    # Print statements (might be intentional)
    "PLR2004", # Magic value comparison (common for HTTP codes, etc.)
    "S105",    # Hardcoded password string (often false positives)
    "S106",    # Hardcoded password function argument (often false positives)
    "N806",    # Non-lowercase variable in function (might conflict with existing style)
    "N805",    # Invalid first argument name for method (might conflict with existing style)
    "N801",    # Invalid class name (might conflict with existing style)
    "ERA001",  # Commented out code (sometimes intentional)
]

# Allow unused variables when they start with an underscore
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Tests can use more flexible rules
"**/test_*.py" = [
    "S101",    # Use of assert
    "PLR2004", # Magic value used in comparison
    "ARG001",  # Unused function argument (fixtures)
]
"**/tests/*.py" = [
    "S101",    # Use of assert
    "PLR2004", # Magic value used in comparison
    "ARG001",  # Unused function argument (fixtures)
]

[lint.isort]
# Match your existing isort configuration
known-first-party = ["app"]
combine-as-imports = true
force-sort-within-sections = true
split-on-trailing-comma = true

[lint.pylint]
# Match some of your pylint settings
max-args = 5
max-branches = 12
max-returns = 6
max-statements = 50

[format]
# Quote style: "double", "single", "preserve"
quote-style = "single"

# Indent style: "tab", "space"
indent-style = "space"

# Skip magic trailing comma: true, false
skip-magic-trailing-comma = false

# Line ending style: "auto", "lf", "crlf", "cr"
line-ending = "auto"

# Format code in docstrings: true, false
docstring-code-format = false

# Docstring code line length: integer, "dynamic"
docstring-code-line-length = "dynamic"
