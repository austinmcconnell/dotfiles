{
    "allowedTools": [
        "fs_read",
        "@filesystem/read_text_file",
        "@filesystem/read_multiple_files",
        "@filesystem/read_media_file",
        "@filesystem/list_directory",
        "@filesystem/list_allowed_directories",
        "@filesystem/search_files",
        "@filesystem/get_file_info",
        "@filesystem/directory_tree",
        "@filesystem/create_directory",
        "@sequential-thinking/sequentialthinking",
        "@git/git_status",
        "@git/git_log",
        "@git/git_diff",
        "@git/git_show",
        "@git/git_branch",
        "@git/git_diff_staged",
        "@git/git_diff_unstaged",
        "@time/get_current_time",
        "@time/convert_time",
        "@fetch/fetch_url",
        "@postgres/query",
        "@jira/list_projects",
        "@jira/search_issues",
        "@jira/get_issue",
        "@jira/add_comment",
        "@jira/add_worklog",
        "@jira/update_worklog",
        "@jira/list_worklogs",
        "@jira/list_comments",
        "@jira/create_issue",
        "@jira/get_create_meta",
        "@jira/get_project",
        "@jira/list_statuses"
    ],
    "description": "Default CLI agent with comprehensive development tools and security restrictions",
    "hooks": {
        "agentSpawn": [],
        "userPromptSubmit": []
    },
    "mcpServers": {
        "filesystem": {
            "command": "npx",
            "args": [
                "@modelcontextprotocol/server-filesystem",
                "~/.dotfiles",
                "."
            ],
            "env": {},
            "timeout": 120000,
            "disabled": false
        },
        "sequential-thinking": {
            "command": "npx",
            "args": [
                "@modelcontextprotocol/server-sequential-thinking"
            ],
            "env": {},
            "timeout": 300000,
            "disabled": false
        },
        "git": {
            "command": "python",
            "args": [
                "-m",
                "mcp_server_git",
                "--repository",
                "."
            ],
            "env": {},
            "timeout": 120000,
            "disabled": false
        },
        "time": {
            "command": "python",
            "args": [
                "-m",
                "mcp_server_time",
                "--local-timezone=America/Chicago"
            ],
            "env": {},
            "timeout": 30000,
            "disabled": false
        },
        "fetch": {
            "command": "python",
            "args": [
                "-m",
                "mcp_server_fetch"
            ],
            "env": {},
            "timeout": 120000,
            "disabled": false
        },
        "postgres": {
            "command": "npx",
            "args": [
                "enhanced-postgres-mcp-server",
                "postgresql://localhost:5432/postgres"
            ],
            "env": {},
            "timeout": 120000,
            "disabled": false
        },
        "jira": {
            "command": "npx",
            "args": [
                "@aashari/mcp-server-atlassian-jira"
            ],
            "env": {},
            "timeout": 120000,
            "disabled": false
        }
    },
    "name": "default",
    "prompt": "You are a comprehensive development assistant with expertise in AWS, infrastructure, databases, and general software development. Your primary role is to help with:\n\n- AWS operations (read-only, following security best practices)\n- Infrastructure analysis and troubleshooting\n- Database operations and queries\n- General development tasks and code review\n- JIRA project management and user story creation\n- Git operations and version control\n\nAlways prioritize security and follow the principle of least privilege. For AWS and Kubernetes operations, request explicit permission before proceeding and only perform read-only operations unless specifically authorized. When working with databases, be cautious with queries that might affect performance.\n\nYou have access to comprehensive workflow guidance - leverage this knowledge to provide informed recommendations aligned with established best practices.",
    "resources": [
        "file://~/.dotfiles/etc/amazon-q/global_rules/workflow/aws-operations-guidance.md",
        "file://~/.dotfiles/etc/amazon-q/global_rules/workflow/kubernetes-operations-guidance.md",
        "file://~/.dotfiles/etc/amazon-q/global_rules/workflow/pre-commit-guidance.md",
        "file://~/.dotfiles/etc/amazon-q/global_rules/workflow/virtual-environment-guidance.md",
        "file://~/.dotfiles/etc/amazon-q/global_rules/code/**/*.md",
        "file://~/.dotfiles/etc/amazon-q/global_rules/security/**/*.md",
        "file://~/.dotfiles/etc/amazon-q/jira-scrum-rules/**/*.md",
        "file://.amazonq/rules/**/*.md",
        "file://README.md"
    ],
    "toolAliases": {
        "@git/git_status": "status",
        "@git/git_log": "log",
        "@git/git_diff": "diff",
        "@git/git_show": "git_show",
        "@git/git_branch": "git_branch",
        "@git/git_diff_staged": "git_diff_staged",
        "@git/git_diff_unstaged": "git_diff_unstaged",
        "@filesystem/read_text_file": "read",
        "@filesystem/read_multiple_files": "read_multiple",
        "@filesystem/read_media_file": "read_media",
        "@filesystem/list_directory": "ls",
        "@filesystem/search_files": "find",
        "@filesystem/create_directory": "mkdir",
        "@postgres/query": "query",
        "@time/get_current_time": "now",
        "@time/convert_time": "convert_time",
        "@jira/get_issue": "jira_get_issue",
        "@jira/list_projects": "jira_ls_projects",
        "@jira/search_issues": "jira_ls_issues",
        "@jira/add_comment": "jira_add_comment",
        "@jira/add_worklog": "jira_add_worklog",
        "@jira/list_worklogs": "jira_ls_worklogs",
        "@jira/list_comments": "jira_ls_comments",
        "@jira/create_issue": "jira_create_issue",
        "@jira/get_create_meta": "jira_get_create_meta",
        "@jira/get_project": "jira_get_project",
        "@jira/list_statuses": "jira_ls_statuses"
    },
    "tools": [
        "*"
    ],
    "toolsSettings": {
        "execute_bash": {
            "deny": [
                "rm *",
                "rmdir *",
                "sudo *",
                "chmod *",
                "chown *",
                "mv /* *",
                "cp /* *",
                "dd *",
                "mkfs *",
                "fdisk *",
                "mount *",
                "umount *",
                "systemctl *",
                "service *",
                "kill -9 *",
                "killall *",
                "pkill *",
                "reboot",
                "shutdown *",
                "init *",
                "crontab -e",
                "crontab -r",
                "docker run --privileged *",
                "docker exec --privileged *",
                "kubectl delete *",
                "kubectl apply *",
                "kubectl create *",
                "kubectl patch *",
                "kubectl replace *"
            ]
        },
        "use_aws": {
            "allowedOperations": [
                "describe-*",
                "list-*",
                "get-*",
                "show-*"
            ],
            "deniedOperations": [
                "delete-*",
                "terminate-*",
                "remove-*",
                "create-*",
                "update-*",
                "modify-*",
                "put-*",
                "attach-*",
                "detach-*"
            ]
        }
    },
    "useLegacyMcpJson": false
}
